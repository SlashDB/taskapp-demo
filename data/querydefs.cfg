add-new-customer:
  creator: admin
  database: Chinook
  desc: Add a new Customer record
  execute:
  - demo
  - public
  http_methods:
    DELETE: false
    GET: false
    POST: true
    PUT: false
  query_id: add-new-customer
  read:
  - demo
  - public
  sqlstr: "-- This is an example of a simple INSERT query\n-- To test in QueryStudio:\n--
    (1) Fill out the parameter form in the bottom panel\n-- (2) Press the big blue
    Play button below.\n-- You can verify that the record was added using Data Discovery.\n--
    Simply navigate to /db/Chinook/Customer and sort by the CustomerId\n-- in descending
    order. Your record will show on top.\nINSERT INTO Customer\n (FirstName, LastName,
    Phone, City, State, Email)\nVALUES\n (:FirstName, :LastName , :Phone, :City, :State,
    :Email)"
  write:
  - demo
album-song-genre:
  creator: admin
  database: Chinook
  desc: Albums, songs and genre, an example of three table join
  execute: []
  http_methods:
    GET: true
  query_id: album-song-genre
  read: []
  sqlstr: "-- Albums, songs and genre, an example of three table join\n-- (this query
    does not take any parameters)\n-- To test in QueryStudio:\n-- (1) Press the big
    blue Play button below.\nSELECT Album.Title as Album, Track.Name as Song, Genre.Name
    as Genre  \nFROM Track\nJOIN Genre ON Track.GenreId = Genre.GenreId\nJOIN Album
    ON Track.AlbumId = Album.AlbumId\nORDER BY Album.Title, Track.Name"
  write: []
invoices-by-year:
  creator: admin
  database: Chinook
  desc: Invoices in a given year, an example of parameterized query
  execute: []
  http_methods:
    GET: true
  query_id: invoices-by-year
  read: []
  sqlstr: '-- Invoices in a given year, an example of parameterized query

    -- with database specific SQL functions.

    -- Try with parameter value in the 2009 to 2013 range

    -- To test in QueryStudio:

    -- (1) Fill out the parameter form in the bottom panel

    -- (2) Press the big blue Play button below.

    SELECT *

    FROM Invoice

    WHERE CAST(strftime(''%Y'', InvoiceDate) AS INT) = :year'
  write: []
invoices-total-range:
  creator: admin
  database: Chinook
  desc: Invoices with a total in a given range, an example of query with two params
  execute: []
  http_methods:
    GET: true
  query_id: invoices-total-range
  read: []
  sqlstr: "-- Invoices with a total in a given range, an example of query with two
    params\n-- Try executing with mintotal: 20, maxtotal: 50 \n-- To test in QueryStudio:\n--
    (1) Fill out the parameter form in the bottom panel\n-- (2) Press the big blue
    Play button below.\nSELECT *\nFROM Invoice\nWHERE Total BETWEEN :mintotal and
    :maxtotal"
  write: []
percent-complete:
  creator: admin
  database: taskdatadb
  desc: Calculate percent of complete tasks in a given list.
  execute:
  - taskapp
  http_methods:
    GET: true
    POST: true
  query_id: percent-complete
  read: []
  sqlstr: "SELECT\n    (SUM(Checked)  * 100  / COUNT(Checked)) Percentage\nFROM TaskItem\nWhere
    TaskListId = :TaskListId"
  write: []
songs-by-genre:
  creator: admin
  database: Chinook
  desc: List of songs by genre (i.e. Rock)
  execute:
  - public
  http_methods:
    GET: true
  query_id: songs-by-genre
  read: []
  sqlstr: '-- Simple query with one parameter and 3 table join

    -- Try with parameter: Rock

    -- To test in QueryStudio:

    -- (1) Fill out the parameter form in the bottom panel

    -- (2) Press the big blue Play button below.

    SELECT ar.Name as Artist, t.Name as Song, t.UnitPrice as Price

    FROM  Artist ar

    JOIN Album al ON ar.ArtistId = al.ArtistId

    JOIN Track t ON al.AlbumId = t.AlbumId

    JOIN Genre g ON t.genreId = g.genreId

    WHERE g.Name = :genre'
  write: []
total-sales-by-customer:
  creator: admin
  database: Chinook
  desc: Customer list with invoice total and last transaction
  execute: []
  http_methods:
    GET: true
  query_id: total-sales-by-customer
  read: []
  sqlstr: "-- This query joins Customer and Invoice tables to produce a report\n--
    containing customer list with their total sales and a date of the\n-- last invoice.\n--
    To test in QueryStudio:\n-- (1) Press the big blue Play button below.\nSELECT
    c.FirstName, c.LastName, c.City, \n  COUNT(i.InvoiceId) \"Invoices Count\", SUM(i.Total)
    \"Invoices Sum\", MAX(i.InvoiceDate) \"Last Invoice\"\nFROM Customer as c\nJOIN
    Invoice as i on c.CustomerId = i.CustomerId\nGROUP BY c.CustomerId\nORDER BY c.LastName"
  write: []
total-sales-by-year:
  creator: admin
  database: Chinook
  desc: Total sales by year - a group by and functions example
  execute:
  - public
  http_methods:
    GET: true
  query_id: total-sales-by-year
  read: []
  sqlstr: "-- Total sales by year - a group by and functions example\n-- To test in
    QueryStudio:\n-- (1) Press the big blue Play button below.\nSELECT strftime('%Y',
    InvoiceDate) as Year, sum(Total) as TotalSales \nFROM Invoice\nGROUP BY strftime('%Y',
    InvoiceDate)"
  write: []
